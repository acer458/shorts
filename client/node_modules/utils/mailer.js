// backend/utils/mailer.js

const nodemailer = require("nodemailer");

// Check for required environment variables AT STARTUP
if (!process.env.GMAIL_USER || !process.env.GMAIL_PASS) {
  console.error("[Mailer] GMAIL_USER or GMAIL_PASS environment variable not set!");
  // You could throw an error here to crash on misconfig ☝️ if you want strict startup.
}

const transporter = nodemailer.createTransport({
  service: "gmail",
  auth: {
    user: process.env.GMAIL_USER, // Sender Gmail address (set in Render env vars)
    pass: process.env.GMAIL_PASS, // Gmail App Password (set in Render env vars)
  },
});

/**
 * Sends a verification email to a user.
 * @param {string} to - The recipient's email address.
 * @param {string} code - The 6-digit verification code.
 */
async function sendVerificationEmail(to, code) {
  const mailOptions = {
    from: `"Shorts App" <${process.env.GMAIL_USER}>`,
    to,
    subject: "Your Shorts App Verification Code",
    text: `Your verification code is: ${code}`,
    html: `<h2>Your verification code:</h2><div style="font-size:2em">${code}</div>`,
  };

  try {
    let info = await transporter.sendMail(mailOptions);
    console.log(`[Mailer] Verification code email SENT to ${to}. Message ID: ${info.messageId}`);
    // If needed, info.accepted, info.rejected are available.
    return true;
  } catch (err) {
    console.error(`[Mailer] FAILED to send to ${to}:`, err && err.message ? err.message : err);
    // You can log err.stack for more details in deep troubleshooting
    throw err;
  }
}

module.exports = { sendVerificationEmail };
